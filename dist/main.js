(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),a=t.n(r),o=t(645),c=t.n(o)()(a());c.push([n.id,":root {\n  margin: 0;\n  padding: 0;\n}\nbody {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #06b6d4;\n}\n#app {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 2rem;\n  padding: 0 2rem 1.5rem 2rem;\n  background-color: white;\n  border-radius: 1rem;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n.heading {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 2rem;\n}\n.heading > h1 {\n  font-size: 3rem;\n}\n#image-temp-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  border-top-left-radius: 1rem;\n  border-top-right-radius: 1rem;\n}\n#weather-image {\n  height: 8rem;\n  width: auto;\n}\n.clear {\n  background: linear-gradient(\n    to top,\n    rgba(56, 189, 248, 0),\n    rgba(56, 189, 248, 1)\n  );\n}\n.thunderstorm {\n  background: linear-gradient(\n    to top,\n    rgba(67, 71, 73, 0),\n    rgba(239, 241, 70, 0.692),\n    rgba(82, 85, 85, 0.911),\n    rgb(58, 59, 59)\n  );\n}\n.dizzle {\n  background: linear-gradient(\n    to top,\n    rgba(193, 197, 199, 0),\n    rgba(193, 197, 199, 1)\n  );\n}\n.rain {\n  background: linear-gradient(\n    to top,\n    rgba(56, 191, 248, 0),\n    rgba(56, 191, 248, 0.767),\n    rgba(193, 197, 199, 1)\n  );\n}\n.snow {\n  background: linear-gradient(\n    to top,\n    rgba(56, 191, 248, 0),\n    rgba(56, 191, 248, 0.562),\n    rgb(255, 255, 255)\n  );\n}\n.fog,\n.mist {\n  background: linear-gradient(\n    to top,\n    rgba(193, 197, 199, 0),\n    rgba(193, 197, 199, 0.295),\n    rgb(255, 255, 255),\n    rgba(193, 197, 199, 1)\n  );\n}\n.clouds {\n  background: linear-gradient(\n    to top,\n    rgba(56, 191, 248, 0),\n    rgba(56, 191, 248, 0.767),\n    rgba(193, 197, 199, 1)\n  );\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;AACZ;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,yBAAyB;AAC3B;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,gBAAgB;EAChB,2BAA2B;EAC3B,uBAAuB;EACvB,mBAAmB;EACnB,4CAA4C;AAC9C;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,mBAAmB;AACrB;AACA;EACE,eAAe;AACjB;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;EACb,4BAA4B;EAC5B,6BAA6B;AAC/B;AACA;EACE,YAAY;EACZ,WAAW;AACb;AACA;EACE;;;;GAIC;AACH;AACA;EACE;;;;;;GAMC;AACH;AACA;EACE;;;;GAIC;AACH;AACA;EACE;;;;;GAKC;AACH;AACA;EACE;;;;;GAKC;AACH;AACA;;EAEE;;;;;;GAMC;AACH;AACA;EACE;;;;;GAKC;AACH",sourcesContent:[":root {\n  margin: 0;\n  padding: 0;\n}\nbody {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #06b6d4;\n}\n#app {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 2rem;\n  padding: 0 2rem 1.5rem 2rem;\n  background-color: white;\n  border-radius: 1rem;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n.heading {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 2rem;\n}\n.heading > h1 {\n  font-size: 3rem;\n}\n#image-temp-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  border-top-left-radius: 1rem;\n  border-top-right-radius: 1rem;\n}\n#weather-image {\n  height: 8rem;\n  width: auto;\n}\n.clear {\n  background: linear-gradient(\n    to top,\n    rgba(56, 189, 248, 0),\n    rgba(56, 189, 248, 1)\n  );\n}\n.thunderstorm {\n  background: linear-gradient(\n    to top,\n    rgba(67, 71, 73, 0),\n    rgba(239, 241, 70, 0.692),\n    rgba(82, 85, 85, 0.911),\n    rgb(58, 59, 59)\n  );\n}\n.dizzle {\n  background: linear-gradient(\n    to top,\n    rgba(193, 197, 199, 0),\n    rgba(193, 197, 199, 1)\n  );\n}\n.rain {\n  background: linear-gradient(\n    to top,\n    rgba(56, 191, 248, 0),\n    rgba(56, 191, 248, 0.767),\n    rgba(193, 197, 199, 1)\n  );\n}\n.snow {\n  background: linear-gradient(\n    to top,\n    rgba(56, 191, 248, 0),\n    rgba(56, 191, 248, 0.562),\n    rgb(255, 255, 255)\n  );\n}\n.fog,\n.mist {\n  background: linear-gradient(\n    to top,\n    rgba(193, 197, 199, 0),\n    rgba(193, 197, 199, 0.295),\n    rgb(255, 255, 255),\n    rgba(193, 197, 199, 1)\n  );\n}\n.clouds {\n  background: linear-gradient(\n    to top,\n    rgba(56, 191, 248, 0),\n    rgba(56, 191, 248, 0.767),\n    rgba(193, 197, 199, 1)\n  );\n}\n"],sourceRoot:""}]);const i=c},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(c[s]=!0)}for(var d=0;d<n.length;d++){var u=[].concat(n[d]);r&&c[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),a&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=a):u[4]="".concat(a)),e.push(u))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),c=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(c).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},c=[],i=0;i<n.length;i++){var s=n[i],d=r.base?s[0]+r.base:s[0],u=o[d]||0,l="".concat(d," ").concat(u);o[d]=u+1;var p=t(l),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(A);else{var g=a(A,r);r.byIndex=i,e.splice(i,0,{identifier:l,updater:g,references:1})}c.push(l)}return c}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var c=0;c<o.length;c++){var i=t(o[c]);e[i].references--}for(var s=r(n,a),d=0;d<o.length;d++){var u=t(o[d]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),(()=>{var n=t(379),e=t.n(n),r=t(795),a=t.n(r),o=t(569),c=t.n(o),i=t(565),s=t.n(i),d=t(216),u=t.n(d),l=t(589),p=t.n(l),A=t(426),g={};g.styleTagTransform=p(),g.setAttributes=s(),g.insert=c().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=u(),e()(A.Z,g),A.Z&&A.Z.locals&&A.Z.locals;const m=n=>{const e=document.querySelector(".data-list"),t=document.querySelector(".temperature"),r=document.createElement("li");r.textContent=`${n.name}, ${n.sys.country}`;const a=document.createElement("ul");a.classList.add("wind-list"),a.textContent="Wind:";const o=document.createElement("li"),c=document.createElement("li");o.textContent=`Speed: ${n.wind.speed}`,c.textContent=`Direction: ${(n=>{let e=n.wind.deg,t="";return(e>=0&&e<31||e>=331&&e<=360)&&(t="North"),e>=31&&e<=60&&(t="North-East"),e>=61&&e<=120&&(t="East"),e>=121&&e<=150&&(t="East-South"),e>=151&&e<=210&&(t="South"),e>=211&&e<=240&&(t="South-West"),e>=241&&e<=300&&(t="West"),e>=301&&e<=330&&(t="North-West"),t})(n)}`,a.append(o,c);const i=document.createElement("ul");i.textContent="Temperature:";const s=document.createElement("li");s.textContent="Min: "+Math.round(10*n.main.temp_min)/10;const d=document.createElement("li");d.textContent="Max: "+Math.round(10*n.main.temp_max)/10,i.append(s,d);const u=document.createElement("li");u.textContent=`Humidity: ${n.main.humidity}%`;const l=document.createElement("li");l.textContent=`Visibility: ${n.visibility/1e3}km`,e.append(r,a,i,u,l),t.textContent=Math.round(10*n.main.temp)/10+"°C"},b=t.p+"ed497eb9a12fe5973db3.svg",f=t.p+"abfb54f76df9a458acce.svg",C=t.p+"67db568c57b3a6a411be.svg",h=t.p+"651952d7882eba9b8a22.svg",v=t.p+"9cfc3ac24c93b940db35.svg",E=t.p+"9cfc3ac24c93b940db35.svg",y=t.p+"a9786e099a2ca65999bd.svg",B=t.p+"a9786e099a2ca65999bd.svg",w=t.p+"1aa998c121b8ccc677f7.svg",x=t.p+"1aa998c121b8ccc677f7.svg",j=t.p+"37381f76c9c33ffc6b1b.svg",k=t.p+"510b0f0135b6b1c76726.svg",S=t.p+"7f2c9339b195dea297a4.svg",M=t.p+"7f2c9339b195dea297a4.svg",$=t.p+"38954842d7e3aea9d0b5.svg",T=t.p+"03d1e457ad5ace46a127.svg",I=t.p+"f2c73f71a8ac54d8eb20.svg",H=t.p+"f2c73f71a8ac54d8eb20.svg";!async function(){const n=await fetch("http://api.openweathermap.org/data/2.5/weather?q=London&APPID=b28f3971f9895a1eb3ed3d2c2b3fdd63&units=metric",{mode:"cors"}).catch((n=>{console.log(n)})),e=await n.json(),t=await new Promise(((n,e)=>{navigator.geolocation.getCurrentPosition(n,e)})).catch((n=>{console.log(n),m(e)})),r=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${await t.coords.latitude}&lon=${await t.coords.longitude}&appid=b28f3971f9895a1eb3ed3d2c2b3fdd63&units=metric`,{mode:"cors"}).catch((n=>{console.log(n)})),a=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${await t.coords.latitude}&lon=${await t.coords.longitude}&appid=b28f3971f9895a1eb3ed3d2c2b3fdd63&units=imperial`,{mode:"cors"}).catch((n=>{console.log(n)})),o=await r.json();await a.json();let c=o;m(c),console.log(c),(n=>{const e=document.getElementById("weather-image");"01d"===n&&(e.src=b),"01n"===n&&(e.src=f),"02d"===n&&(e.src=C),"02n"===n&&(e.src=h),"03d"===n&&(e.src=v),"03n"===n&&(e.src=E),"04d"===n&&(e.src=y),"04n"===n&&(e.src=B),"09d"===n&&(e.src=w),"09n"===n&&(e.src=x),"10d"===n&&(e.src=j),"10n"===n&&(e.src=k),"11d"===n&&(e.src=S),"11n"===n&&(e.src=M),"13d"===n&&(e.src=$),"13n"===n&&(e.src=T),"50d"===n&&(e.src=I),"50n"===n&&(e.src=H)})(c.weather[0].icon),(n=>{const e=document.getElementById("image-temp-container");e.className="";const t=`${n.weather[0].main}`;t.toLowerCase(),e.classList.add(`${t.toLowerCase()}`)})(c)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,