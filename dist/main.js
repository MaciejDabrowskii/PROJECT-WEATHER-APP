(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>m});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),c=t(667),A=t.n(c),s=new URL(t(419),t.b),d=i()(o()),l=A()(s);d.push([n.id,'@font-face {\n  font-family: "font";\n  src: url('+l+') format("woff");\n  font-weight: 400;\n  font-style: normal;\n}\n:root {\n  margin: 0;\n  padding: 0;\n  font-family: "font";\n}\nbutton,\ninput {\n  font-family: "font";\n  font-size: 1rem;\n}\n\ninput {\n  height: 2rem;\n  width: 15rem;\n  border: solid 0.2rem rgb(6, 182, 212);\n  border-radius: 0.6rem;\n  text-align: center;\n}\nbutton {\n  width: 5rem;\n  height: 2rem;\n  border: solid 0.2rem rgb(6, 182, 212);\n  border-radius: 0.6rem;\n  background-color: rgb(255, 255, 255);\n  transition: 0.3s;\n}\nbutton:hover {\n  cursor: pointer;\n  background-color: rgba(6, 181, 212, 0.548);\n}\n::placeholder {\n  text-align: center;\n}\nbody {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(6, 182, 212);\n}\n#app {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 2rem;\n  padding: 0 2rem 1.5rem 2rem;\n  background-color: white;\n  border-radius: 1rem;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n.heading {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 2rem;\n}\n.heading > h1 {\n  font-size: 3rem;\n}\n.search-container {\n  margin-bottom: 1rem;\n}\n.units-container {\n  display: flex;\n  gap: 0.9rem;\n}\n.units {\n  margin: 0;\n  height: 1.55rem;\n  border: solid 0.2rem rgb(6, 182, 212);\n  border-radius: 0.6rem;\n  display: flex;\n  align-items: center;\n  padding: 0 0.6rem;\n}\n#image-temp-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  border-top-left-radius: 1rem;\n  border-top-right-radius: 1rem;\n  width: 13rem;\n  height: 15rem;\n}\n\n#weather-image {\n  height: 8rem;\n  width: 100%;\n}\nh2 {\n  font-size: 1.8rem;\n}\nul {\n  list-style: none;\n  padding: 0;\n}\nul > * {\n  padding: 0.5rem 0rem;\n  border-bottom: 0.2rem solid rgb(6, 182, 212);\n}\nul > ul > * {\n  padding-left: 4rem;\n  border-bottom: none;\n}\nul > ul > *::before {\n  content: "\\2022";\n  color: rgb(6, 182, 212);\n  font-weight: bold;\n  display: inline-block;\n  width: 1rem;\n  margin-left: -1rem;\n}\n.clear {\n  background: linear-gradient(\n    to top,\n    rgba(56, 189, 248, 0),\n    rgba(56, 189, 248, 1)\n  );\n}\n.cityAndCoutry {\n  text-align: center;\n  font-size: 1.5rem;\n}\n#gitIcon {\n  width: 2rem;\n  position: absolute;\n  left: 0;\n  margin: 1rem;\n  transition: transform 0.4s ease-in-out;\n}\n#gitIcon:hover {\n  cursor: pointer;\n  transform: rotate(360deg) scale(1.2);\n}\n\n.thunderstorm {\n  background: linear-gradient(\n    to top,\n    rgba(67, 71, 73, 0),\n    rgba(239, 241, 70, 0.692),\n    rgba(82, 85, 85, 0.911),\n    rgb(58, 59, 59)\n  );\n}\n.dizzle {\n  background: linear-gradient(\n    to top,\n    rgba(193, 197, 199, 0),\n    rgba(193, 197, 199, 1)\n  );\n}\n.rain {\n  background: linear-gradient(\n    to top,\n    rgba(56, 191, 248, 0),\n    rgba(56, 191, 248, 0.767),\n    rgba(193, 197, 199, 1)\n  );\n}\n.snow {\n  background: linear-gradient(\n    to top,\n    rgba(56, 191, 248, 0),\n    rgba(56, 191, 248, 0.562),\n    rgb(255, 255, 255)\n  );\n}\n.fog,\n.mist {\n  background: linear-gradient(\n    to top,\n    rgba(193, 197, 199, 0),\n    rgba(193, 197, 199, 0.295),\n    rgb(255, 255, 255),\n    rgba(193, 197, 199, 1)\n  );\n}\n.clouds {\n  background: linear-gradient(\n    to top,\n    rgba(56, 191, 248, 0),\n    rgba(56, 191, 248, 0.767),\n    rgba(193, 197, 199, 1)\n  );\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,mBAAmB;EACnB,2DAA4C;EAC5C,gBAAgB;EAChB,kBAAkB;AACpB;AACA;EACE,SAAS;EACT,UAAU;EACV,mBAAmB;AACrB;AACA;;EAEE,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,qCAAqC;EACrC,qBAAqB;EACrB,kBAAkB;AACpB;AACA;EACE,WAAW;EACX,YAAY;EACZ,qCAAqC;EACrC,qBAAqB;EACrB,oCAAoC;EACpC,gBAAgB;AAClB;AACA;EACE,eAAe;EACf,0CAA0C;AAC5C;AACA;EACE,kBAAkB;AACpB;AACA;EACE,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,kCAAkC;AACpC;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,gBAAgB;EAChB,2BAA2B;EAC3B,uBAAuB;EACvB,mBAAmB;EACnB,4CAA4C;AAC9C;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,mBAAmB;AACrB;AACA;EACE,eAAe;AACjB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,aAAa;EACb,WAAW;AACb;AACA;EACE,SAAS;EACT,eAAe;EACf,qCAAqC;EACrC,qBAAqB;EACrB,aAAa;EACb,mBAAmB;EACnB,iBAAiB;AACnB;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;EACb,4BAA4B;EAC5B,6BAA6B;EAC7B,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,WAAW;AACb;AACA;EACE,iBAAiB;AACnB;AACA;EACE,gBAAgB;EAChB,UAAU;AACZ;AACA;EACE,oBAAoB;EACpB,4CAA4C;AAC9C;AACA;EACE,kBAAkB;EAClB,mBAAmB;AACrB;AACA;EACE,gBAAgB;EAChB,uBAAuB;EACvB,iBAAiB;EACjB,qBAAqB;EACrB,WAAW;EACX,kBAAkB;AACpB;AACA;EACE;;;;GAIC;AACH;AACA;EACE,kBAAkB;EAClB,iBAAiB;AACnB;AACA;EACE,WAAW;EACX,kBAAkB;EAClB,OAAO;EACP,YAAY;EACZ,sCAAsC;AACxC;AACA;EACE,eAAe;EACf,oCAAoC;AACtC;;AAEA;EACE;;;;;;GAMC;AACH;AACA;EACE;;;;GAIC;AACH;AACA;EACE;;;;;GAKC;AACH;AACA;EACE;;;;;GAKC;AACH;AACA;;EAEE;;;;;;GAMC;AACH;AACA;EACE;;;;;GAKC;AACH",sourcesContent:['@font-face {\n  font-family: "font";\n  src: url("./fonts/font.woff") format("woff");\n  font-weight: 400;\n  font-style: normal;\n}\n:root {\n  margin: 0;\n  padding: 0;\n  font-family: "font";\n}\nbutton,\ninput {\n  font-family: "font";\n  font-size: 1rem;\n}\n\ninput {\n  height: 2rem;\n  width: 15rem;\n  border: solid 0.2rem rgb(6, 182, 212);\n  border-radius: 0.6rem;\n  text-align: center;\n}\nbutton {\n  width: 5rem;\n  height: 2rem;\n  border: solid 0.2rem rgb(6, 182, 212);\n  border-radius: 0.6rem;\n  background-color: rgb(255, 255, 255);\n  transition: 0.3s;\n}\nbutton:hover {\n  cursor: pointer;\n  background-color: rgba(6, 181, 212, 0.548);\n}\n::placeholder {\n  text-align: center;\n}\nbody {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(6, 182, 212);\n}\n#app {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 2rem;\n  padding: 0 2rem 1.5rem 2rem;\n  background-color: white;\n  border-radius: 1rem;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\n.heading {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 2rem;\n}\n.heading > h1 {\n  font-size: 3rem;\n}\n.search-container {\n  margin-bottom: 1rem;\n}\n.units-container {\n  display: flex;\n  gap: 0.9rem;\n}\n.units {\n  margin: 0;\n  height: 1.55rem;\n  border: solid 0.2rem rgb(6, 182, 212);\n  border-radius: 0.6rem;\n  display: flex;\n  align-items: center;\n  padding: 0 0.6rem;\n}\n#image-temp-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  border-top-left-radius: 1rem;\n  border-top-right-radius: 1rem;\n  width: 13rem;\n  height: 15rem;\n}\n\n#weather-image {\n  height: 8rem;\n  width: 100%;\n}\nh2 {\n  font-size: 1.8rem;\n}\nul {\n  list-style: none;\n  padding: 0;\n}\nul > * {\n  padding: 0.5rem 0rem;\n  border-bottom: 0.2rem solid rgb(6, 182, 212);\n}\nul > ul > * {\n  padding-left: 4rem;\n  border-bottom: none;\n}\nul > ul > *::before {\n  content: "\\2022";\n  color: rgb(6, 182, 212);\n  font-weight: bold;\n  display: inline-block;\n  width: 1rem;\n  margin-left: -1rem;\n}\n.clear {\n  background: linear-gradient(\n    to top,\n    rgba(56, 189, 248, 0),\n    rgba(56, 189, 248, 1)\n  );\n}\n.cityAndCoutry {\n  text-align: center;\n  font-size: 1.5rem;\n}\n#gitIcon {\n  width: 2rem;\n  position: absolute;\n  left: 0;\n  margin: 1rem;\n  transition: transform 0.4s ease-in-out;\n}\n#gitIcon:hover {\n  cursor: pointer;\n  transform: rotate(360deg) scale(1.2);\n}\n\n.thunderstorm {\n  background: linear-gradient(\n    to top,\n    rgba(67, 71, 73, 0),\n    rgba(239, 241, 70, 0.692),\n    rgba(82, 85, 85, 0.911),\n    rgb(58, 59, 59)\n  );\n}\n.dizzle {\n  background: linear-gradient(\n    to top,\n    rgba(193, 197, 199, 0),\n    rgba(193, 197, 199, 1)\n  );\n}\n.rain {\n  background: linear-gradient(\n    to top,\n    rgba(56, 191, 248, 0),\n    rgba(56, 191, 248, 0.767),\n    rgba(193, 197, 199, 1)\n  );\n}\n.snow {\n  background: linear-gradient(\n    to top,\n    rgba(56, 191, 248, 0),\n    rgba(56, 191, 248, 0.562),\n    rgb(255, 255, 255)\n  );\n}\n.fog,\n.mist {\n  background: linear-gradient(\n    to top,\n    rgba(193, 197, 199, 0),\n    rgba(193, 197, 199, 0.295),\n    rgb(255, 255, 255),\n    rgba(193, 197, 199, 1)\n  );\n}\n.clouds {\n  background: linear-gradient(\n    to top,\n    rgba(56, 191, 248, 0),\n    rgba(56, 191, 248, 0.767),\n    rgba(193, 197, 199, 1)\n  );\n}\n'],sourceRoot:""}]);const m=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(i[A]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],c=0;c<n.length;c++){var A=n[c],s=r.base?A[0]+r.base:A[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var m=t(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==m)e[m].references++,e[m].updater(u);else{var p=o(u,r);r.byIndex=c,e.splice(c,0,{identifier:l,updater:p,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var A=r(n,o),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},419:(n,e,t)=>{n.exports=t.p+"62aca8300acf8c158766.woff"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),c=t(565),A=t.n(c),s=t(216),d=t.n(s),l=t(589),m=t.n(l),u=t(426),p={};p.styleTagTransform=m(),p.setAttributes=A(),p.insert=i().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=d(),e()(u.Z,p),u.Z&&u.Z.locals&&u.Z.locals;const g=n=>{let e=n.wind.deg,t="";return(e>=0&&e<31||e>=331&&e<=360)&&(t="North"),e>=31&&e<=60&&(t="North-East"),e>=61&&e<=120&&(t="East"),e>=121&&e<=150&&(t="East-South"),e>=151&&e<=210&&(t="South"),e>=211&&e<=240&&(t="South-West"),e>=241&&e<=300&&(t="West"),e>=301&&e<=330&&(t="North-West"),t},C=(n,e)=>{if("metric"===e){document.querySelector(".units").textContent=`UNITS: ${e}`;const t=document.querySelector(".data-list");t.innerHTML="";const r=document.querySelector(".temperature"),o=document.createElement("li");o.classList.add("cityAndCoutry"),o.textContent=`${n.name}, ${n.sys.country}`;const a=document.createElement("ul");a.classList.add("wind-list"),a.textContent="Wind:";const i=document.createElement("li"),c=document.createElement("li");i.textContent=`Speed: ${n.wind.speed} m/s`,c.textContent=`Direction: ${g(n)}`,a.append(i,c);const A=document.createElement("ul");A.textContent="Temperature:";const s=document.createElement("li");s.textContent=`Min: ${Math.round(10*n.main.temp_min)/10} °C`;const d=document.createElement("li");d.textContent=`Max: ${Math.round(10*n.main.temp_max)/10} °C`,A.append(s,d);const l=document.createElement("li");l.textContent=`Humidity: ${n.main.humidity}%`;const m=document.createElement("li");m.textContent=`Pressure: ${n.main.pressure} hPa`,t.append(o,a,A,l,m),r.textContent=Math.round(10*n.main.temp)/10+" °C"}else{document.querySelector(".units").textContent=`UNITS: ${e}`;const t=document.querySelector(".data-list");t.innerHTML="";const r=document.querySelector(".temperature"),o=document.createElement("li");o.classList.add("cityAndCoutry"),o.textContent=`${n.name}, ${n.sys.country}`;const a=document.createElement("ul");a.classList.add("wind-list"),a.textContent="Wind:";const i=document.createElement("li"),c=document.createElement("li");i.textContent=`Speed: ${n.wind.speed} mi/h`,c.textContent=`Direction: ${g(n)}`,a.append(i,c);const A=document.createElement("ul");A.textContent="Temperature:";const s=document.createElement("li");s.textContent=`Min: ${Math.round(10*n.main.temp_min)/10} °F`;const d=document.createElement("li");d.textContent=`Max: ${Math.round(10*n.main.temp_max)/10} °F`,A.append(s,d);const l=document.createElement("li");l.textContent=`Humidity: ${n.main.humidity}%`;const m=document.createElement("li");m.textContent=`Pressure: ${n.main.pressure} hPa`,t.append(o,a,A,l,m),r.textContent=Math.round(10*n.main.temp)/10+" °F"}},f=t.p+"ed497eb9a12fe5973db3.svg",b=t.p+"abfb54f76df9a458acce.svg",h=t.p+"67db568c57b3a6a411be.svg",E=t.p+"651952d7882eba9b8a22.svg",B=t.p+"9cfc3ac24c93b940db35.svg",y=t.p+"9cfc3ac24c93b940db35.svg",w=t.p+"a9786e099a2ca65999bd.svg",v=t.p+"a9786e099a2ca65999bd.svg",x=t.p+"1aa998c121b8ccc677f7.svg",k=t.p+"1aa998c121b8ccc677f7.svg",S=t.p+"37381f76c9c33ffc6b1b.svg",I=t.p+"510b0f0135b6b1c76726.svg",$=t.p+"7f2c9339b195dea297a4.svg",q=t.p+"7f2c9339b195dea297a4.svg",j=t.p+"38954842d7e3aea9d0b5.svg",T=t.p+"03d1e457ad5ace46a127.svg",M=t.p+"f2c73f71a8ac54d8eb20.svg",L=t.p+"f2c73f71a8ac54d8eb20.svg",P=t.p+"62b1c7c5035a4e47fc5f.svg",U=n=>{const e=document.getElementById("weather-image");"01d"===n&&(e.src=f),"01n"===n&&(e.src=b),"02d"===n&&(e.src=h),"02n"===n&&(e.src=E),"03d"===n&&(e.src=B),"03n"===n&&(e.src=y),"04d"===n&&(e.src=w),"04n"===n&&(e.src=v),"09d"===n&&(e.src=x),"09n"===n&&(e.src=k),"10d"===n&&(e.src=S),"10n"===n&&(e.src=I),"11d"===n&&(e.src=$),"11n"===n&&(e.src=q),"13d"===n&&(e.src=j),"13n"===n&&(e.src=T),"50d"===n&&(e.src=M),"50n"===n&&(e.src=L),"error"===n&&(e.src=P)},N=n=>{const e=document.getElementById("image-temp-container");e.className="";const t=`${n.weather[0].main}`;t.toLowerCase(),e.classList.add(`${t.toLowerCase()}`)},W=async n=>(async()=>{if("metric"===n){let n=document.getElementById("search-city").value;const e=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${n}&APPID=b28f3971f9895a1eb3ed3d2c2b3fdd63&units=metric`,{mode:"cors"}).catch((n=>{alert("Invalid city!"),console.log(n)}));return await e.json()}{let e=document.getElementById("search-city").value;if("imperial"===n){const n=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e}&APPID=b28f3971f9895a1eb3ed3d2c2b3fdd63&units=imperial`,{mode:"cors"}).catch((n=>{alert("Invalid city!"),console.log(n)}));return await n.json()}}})(),H=t.p+"b039b2d83982c8256af3.png";!async function(){let n="metric",e=0;document.querySelector(".units").textContent=`UNITS: ${n}`;let t,r="no",o=await fetch("https://api.openweathermap.org/data/2.5/weather?q=London&APPID=b28f3971f9895a1eb3ed3d2c2b3fdd63&units=metric",{mode:"cors"}).then((n=>n.json())).catch((n=>{console.log(n)}));const a=await fetch("https://api.openweathermap.org/data/2.5/weather?q=London&APPID=b28f3971f9895a1eb3ed3d2c2b3fdd63&units=imperial",{mode:"cors"}).then((n=>n.json())).catch((n=>{console.log(n)})),i=await o,c=await new Promise(((n,e)=>{navigator.geolocation.getCurrentPosition(n,e)})).catch((e=>{console.log(e),r="yes",C(i,n),U(i.weather[0].icon),N(i)}));let A,s,d,l;"no"===r&&(A=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${await c.coords.latitude}&lon=${await c.coords.longitude}&appid=b28f3971f9895a1eb3ed3d2c2b3fdd63&units=metric`,{mode:"cors"}).catch((n=>{console.log(n)})),s=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${await c.coords.latitude}&lon=${await c.coords.longitude}&appid=b28f3971f9895a1eb3ed3d2c2b3fdd63&units=imperial`,{mode:"cors"}).catch((n=>{console.log(n)})),d=await A.json(),l=await s.json(),t=d,C(t,n),U(t.weather[0].icon),N(t)),document.getElementById("search-btn").addEventListener("click",(async()=>{e++,r="no",t=await W(n),"404"===t.cod&&(U("error"),document.querySelector(".temperature").textContent="City not found!",alert("City not found!")),await C(t,n),await U(t.weather[0].icon),N(t)})),document.getElementById("switch-units").addEventListener("click",(async()=>{"metric"===n?("yes"===r&&0===e&&(n="imperial",document.querySelector(".units").textContent=`UNITS: ${n}`,t=a,C(t,n)),0===e&&"no"===r?(t=l,n="imperial",C(t,n)):e>0&&"no"===r&&(n="imperial",document.querySelector(".units").textContent=`UNITS: ${n}`,t=await W(n),C(t,n))):("yes"===r&&0===e&&(n="metric",document.querySelector(".units").textContent=`UNITS: ${n}`,t=o,C(t,n)),0===e&&"no"===r?(t=d,n="metric",document.querySelector(".units").textContent=`UNITS: ${n}`,C(t,n)):e>0&&"no"===r&&(n="metric",document.querySelector(".units").textContent=`UNITS: ${n}`,t=await W(n),C(t,n)))})),document.querySelector("#gitIcon").src=H,document.querySelector("#gitIcon").addEventListener("click",(()=>{window.open("https://github.com/MaciejDabrowskii?tab=repositories","_blank").focus()}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,